groups:
- name: all
  jobs:
  - compile_gpdb_centos6
  - DPM_backup-restore_ddboost_part1
  - DPM_backup-restore_ddboost_part2
  - DPM_backup-restore_ddboost_part3
  - DPM_backup-restore_netbackup_part1
  - DPM_backup-restore_netbackup_part2
  - DPM_backup-restore_netbackup_part3

## ======================================================================
## resource types
## ======================================================================

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

## ======================================================================
## resources
## ======================================================================

resources:
- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}
    tag_filter: 1.0.0

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{gpdb4-tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{gpdb4-tf-machine-secret-access-key}}
    storage:
      access_key_id: {{gpdb4-tf-machine-access-key-id}}
      secret_access_key: {{gpdb4-tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      # This is not parameterized, on purpose. All tfstates will go to this spot,
      # and different teams will place there clusters' tfstate files under different paths
      bucket: pivotal-pa-toolsmiths-pipeline-dynamic-terraform
      ###########################################################
      # Two conventions are allowed for bucket_path:            #
      # 1) Cluster are expected to be destroyed automatically   #
      #    Toolsmiths will reap old and orphaned clusters       #
      #                                                         #
      #      bucket_path: prod/[Pipeline Name]/                 #
      #                                                         #
      # 2) Long lived clusters for development.                 #
      #    The team that creates it is responsible for cluster  #
      #                                                         #
      #     bucket_path: dev/[Team Name]/                       #
      #                                                         #
      ###########################################################
      bucket_path: {{tf-bucket-path}}

- name: gpdb_src
  type: git
  source:
    branch: {{gpdb-git-branch}}
    uri: {{gpdb-git-remote}}
    ignore_paths:
    - gpdb-doc/*
    - README*

- name: gpaddon_src
  type: git
  source:
    branch: {{gpaddon-git-branch}}
    private_key: {{gpaddon-git-key}}
    uri: {{gpaddon-git-remote}}

- name: pxf_src
  type: git
  source:
    branch: {{pxf-git-branch}}
    tag_filter: {{pxf-git-filter}}
    private_key: {{pxf-git-key}}
    uri: {{pxf-git-remote}}

- name: centos-gpdb-dev-6
  type: docker-image
  source:
    repository: pivotaldata/centos-gpdb-dev
    tag: '6-gcc6.2-llvm3.7'

- name: bin_gpdb_centos6
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{bucket-name}}
    region_name: {{aws-region}}
    secret_access_key: {{bucket-secret-access-key}}
    versioned_file: {{bin_gpdb_centos_versioned_file}}

- name: nightly-trigger
  type: time
  source:
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday]
    start: 6:00 AM
    stop: 7:00 AM

# Resource used for Netbackup test
- name: netbackup-client-installer
  type: s3
  source:
    access_key_id: {{gpdb4-bucket-access-key-id}}
    bucket: {{netbackup_installer_bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}
    versioned_file: netbackup-installation/NetBackup_7.7.3_CLIENTS_RHEL_2.6.18.tar.gz

## ======================================================================
## reusable anchors
## ======================================================================
ccp_create_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/aws-pivotal-pa-toolsmiths/

ccp_vars_anchor: &ccp_default_vars
  aws_instance-node-instance_type: t2.medium
  platform: centos6

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/aws-pivotal-pa-toolsmiths/

    vars:
      aws_instance-node-instance_type: t2.micro #t2.micro is ignored in destroy, but aws_instance-node-instance_type is required.
  get_params:
    action: destroy

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{gpdb4-tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{gpdb4-tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: {{tf-bucket-path}}
  BUCKET_NAME: pivotal-pa-toolsmiths-pipeline-dynamic-terraform

debug_sleep_anchor: &debug_sleep
  do:
  - task: debug_sleep
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
          tag: latest
      run:
        path: 'sh'
        args: ['-c', 'sleep 6h']
    ensure:
      <<: *ccp_destroy

## ======================================================================
## jobs
## ======================================================================

# Stage 1: Build and C Unit Tests

jobs:

- name: compile_gpdb_centos6
  plan:
  - aggregate:
    - get: nightly-trigger
      trigger: true
    - get: gpdb_src
    - get: gpaddon_src
    - get: pxf_src
    - get: centos-gpdb-dev-6
  - task: compile_gpdb
    file: gpdb_src/concourse/tasks/compile_gpdb.yml
    image: centos-gpdb-dev-6
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      CONFIGURE_FLAGS: {{configure_flags}}
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
      BLD_TARGETS: "clients loaders"
  - aggregate:
    - put: bin_gpdb_centos6
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz

- name: DPM_backup-restore_netbackup_part1
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["netbackup"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/aws-pivotal-pa-toolsmiths/
      vars:
        <<: *ccp_default_vars
    tags: ["netbackup"]
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartI
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: DPM_backup-restore_netbackup_part2
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["netbackup"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/aws-pivotal-pa-toolsmiths/
      vars:
        <<: *ccp_default_vars
    tags: ["netbackup"]
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartII
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: DPM_backup-restore_netbackup_part3
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["netbackup"]
    - get: gpdb_src
      tags: ["netbackup"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["netbackup"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["netbackup"]
    - get: netbackup_installer
      tags: ["netbackup"]
      resource: netbackup-client-installer
  - put: terraform
    params:
      <<: *ccp_default_params
      terraform_source: ccp_src/aws-pivotal-pa-toolsmiths/
      vars:
        <<: *ccp_default_vars
    tags: ["netbackup"]
  - task: gen_cluster
    tags: ["netbackup"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: netbackup_pre_test_setup
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/setup_netbackup.yml
    image: centos-gpdb-dev-6
    params:
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}}; export NETBACKUP_KEY={{netbackup_key}};
  - task: run_tests
    tags: ["netbackup"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=nbusetup77,nbupartIII
      CUSTOM_ENV: export NETBACKUP_SERVER={{netbackup_host}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: DPM_backup-restore_ddboost_part1
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"] # We use a specific worker that has access to our Data Domain
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["ddboost"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
    tags: ["ddboost"]
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
      image_resource:
        type: docker-image
        source:
          repository: centos
          tag: '6'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/aws/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/concourse/scripts/backup_utils.sh; setup_ddboost
    on_failure:
      <<: *ccp_destroy
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartI
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: DPM_backup-restore_ddboost_part2
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"] # We use a specific worker that has access to our Data Domain
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["ddboost"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
    tags: ["ddboost"]
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
      image_resource:
        type: docker-image
        source:
          repository: centos
          tag: '6'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/aws/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/concourse/scripts/backup_utils.sh; setup_ddboost
    on_failure:
      <<: *ccp_destroy
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartII
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy

- name: DPM_backup-restore_ddboost_part3
  plan:
  - aggregate:
    - get: ccp_src
      tags: ["ddboost"] # We use a specific worker that has access to our Data Domain
    - get: gpdb_src
      tags: ["ddboost"]
      passed: [compile_gpdb_centos6]
    - get: gpdb_binary
      tags: ["ddboost"]
      resource: bin_gpdb_centos6
      passed: [compile_gpdb_centos6]
      trigger: true
    - get: centos-gpdb-dev-6
      tags: ["ddboost"]
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
    tags: ["ddboost"]
  - task: gen_cluster
    tags: ["ddboost"]
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    on_failure:
      <<: *ccp_destroy
  - task: ddboost_pre_test_setup
    tags: ["ddboost"]
    config:
      platform: linux
      inputs:
       - name: ccp_src
       - name: gpdb_src
       - name: cluster_env_files
      image_resource:
        type: docker-image
        source:
          repository: centos
          tag: '6'
      run:
        path: bash
        args:
        - -c
        - |
          set -ex
          ccp_src/aws/setup_ssh_to_cluster.sh
          scp cluster_env_files/terraform/name mdw:/tmp/terraform_name
          export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}};
          source gpdb_src/concourse/scripts/backup_utils.sh; setup_ddboost
    on_failure:
      <<: *ccp_destroy
  - task: run_tests
    tags: ["ddboost"]
    file: gpdb_src/concourse/tasks/run_behave.yml
    image: centos-gpdb-dev-6
    params:
      BEHAVE_FLAGS: --tags=ddboostsetup,ddpartIII
      CUSTOM_ENV: export DD_SOURCE_HOST={{datadomain_source_host}}; export DD_DEST_HOST={{datadomain_dest_host}}; export DD_USER={{datadomain_user}}; export DD_PASSWORD={{datadomain_password}};
    on_failure:
      <<: *debug_sleep
  - *ccp_destroy
